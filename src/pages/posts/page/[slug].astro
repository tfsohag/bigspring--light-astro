---
import config from "@config/config.json";
import Base from "@layouts/Base.astro";
import Pagination from "@layouts/components/Pagination.astro";
import Post from "@layouts/partials/Post.astro";
import { getSinglePage } from "@lib/contentParser.astro";
import { sortByDate } from "@lib/utils/sortFunctions";

export async function getStaticPaths() {
  const posts = await getSinglePage("posts");
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

const { slug } = Astro.params;
const posts = await getSinglePage("posts");
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);
---

<Base>
  <section class="section">
    <div class="container">
      <div class="row">
        {
          currentPosts.map((post, i) => (
            <div class="col-12 mb-8 sm:col-6">
              <Post post={post} />
            </div>
          ))
        }
      </div>
      <Pagination totalPages={totalPages} currentPage={currentPage} />
    </div>
  </section>
</Base>
